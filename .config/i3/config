#Scripts directory
set $scripts ~/.config/i3/scripts
#Default Modifier (Mod4 = Meta Key)
set $mod Mod4
#Default Font
font pango:DejaVu Sans Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id i3-sensible-terminal
#Thunar
bindsym $mod+t exec thunar
#Chrome
bindsym $mod+Shift+Return exec firefox 
# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show run 

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Workspace names
set $workspace_1	"1: "
set $workspace_2	"2: "
set $workspace_3	"3: "
set $workspace_4	"4: ws4"
set $workspace_5	"5: ws5"
set $workspace_6	"6: ws6"
set $workspace_7	"7: ws7"
set $workspace_8	"8: ws8"
set $workspace_9	"9: "
set $workspace_10	"10: "

# switch to workspace
bindsym $mod+1 workspace $workspace_1
bindsym $mod+2 workspace $workspace_2
bindsym $mod+3 workspace $workspace_3
bindsym $mod+4 workspace $workspace_4
bindsym $mod+5 workspace $workspace_5
bindsym $mod+6 workspace $workspace_6
bindsym $mod+7 workspace $workspace_7
bindsym $mod+8 workspace $workspace_8
bindsym $mod+9 workspace $workspace_9
bindsym $mod+0 workspace $workspace_10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace_1
bindsym $mod+Shift+2 move container to workspace $workspace_2
bindsym $mod+Shift+3 move container to workspace $workspace_3
bindsym $mod+Shift+4 move container to workspace $workspace_4
bindsym $mod+Shift+5 move container to workspace $workspace_5
bindsym $mod+Shift+6 move container to workspace $workspace_6
bindsym $mod+Shift+7 move container to workspace $workspace_7
bindsym $mod+Shift+8 move container to workspace $workspace_8
bindsym $mod+Shift+9 move container to workspace $workspace_9
bindsym $mod+Shift+0 move container to workspace $workspace_10

#Screen Movement
bindsym $mod+Control+Left move workspace to output left 
bindsym $mod+Control+Right move workspace to ouptut right

bindsym $mod+Control+j move workspace to output left
bindsym $mod+Control+semicolon move workspace to output right

#WS Screen assignment
#workspace $workspace_1 output 	$Screen
#workspace $workspace_2 output 	$Screen
#workspace $workspace_9 output	$TV
#workspace $workspace_10 output 	$TV

#Screen Configuration

#exec $scripts/leftOn.sh
#exec $scripts/rightOn.sh

#set $mode_display Displays: 1-DisplayPort 2-Hdmi
#set $mode_display_1 DisplayPort: 1 ON 2 OFF
#set $mode_display_2 HDMI: 1 ON 2 OFF 

#mode "$mode_display" {
# 	bindsym 1 mode "$mode_display_1"
#	bindsym 2 mode "$mode_display_2"

	# back to normal: Enter or Escape
#       bindsym Return mode "default"
#        bindsym Escape mode "default"
#}

#mode "$mode_display_1" {
# 	bindsym 1 exec $scripts/leftOn.sh
#	bindsym 2 exec $scripts/leftOff.sh

	# back to normal: Enter or Escape
#       bindsym Return mode "default"
#        bindsym Escape mode "default"
#}

#mode "$mode_display_2" {
# 	bindsym 1 exec $scripts/rightOn.sh
#	bindsym 2 exec $scripts/rightOff.sh

	# back to normal: Enter or Escape
#       bindsym Return mode "default"
#        bindsym Escape mode "default"
#}


#bindsym $mod+shift+p mode "$mode_display"
exec xrandr --output DisplayPort-0 --primary --mode 3840x2160 --pos 3840x0 --rotate normal --output DVI-D-0 --off --output HDMI-A-0 --mode 1920x1080 --pos 0x0 --rotate normal --scale 2x2


#Open in workspaces
#assign [class="google-chrome"] $workspace_2
#assign [class="Google-chrome"] $workspace_2

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the winow’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

#Polybar
#exec_always --no-startup-id MONITOR=DisplayPort-0 $HOME/.config/polybar/launch.sh
#exec_always --no-startup-id MONITOR=HDMI-A-0 $HOME/.config/polybar/launch.sh

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3blocks -c ~/.config/i3/i3blocks.conf
	#position top
  colors {
    separator #dc322f
    background #002b36
   statusline #268bd2
    focused_workspace #fdf6e3 #859900 #fdf6e3
    active_workspace #fdf6e3 #6c71c4 #fdf6e3
    inactive_workspace #586e75 #93a1a1 #002b36
    urgent_workspace #d33682 #d33682 #fdf6e3
  }
}

#Notifications
exec --no-startup-id dunst
#Bluetooth
exec --no-startup-id blueman-applet

#Theme
client.focused #859900 #859900 #fdf6e3 #6c71c4
client.focused_inactive #073642 #073642 #eee8d5 #6c71c4
client.unfocused #073642 #073642 #93a1a1 #586e75
client.urgent #d33682 #d33682 #fdf6e3 #dc322f

#Lock the keyboard
bindsym $mod+shift+x exec i3lock

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $front toggle # mute sound

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

exec --no-startup-id compton
exec --no-startup-id variety
exec --no-startup-id unclutter
#Disable borders
for_window [class="^.*"] border pixel 0

#Gaps config
smart_gaps on
gaps inner 9
gaps outer 1

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
