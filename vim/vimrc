"Remap command to space
let g:mapleader = "\<Space>"
let g:maplocalleader = ','
set encoding=utf-8
set number
set rnu

let g:vim_home = get(g:, 'vim_home', expand('~/.config/vim'))

"Load configuration from the configs file
let config_list = [
	\ 'plug.vim',
	\ 'signify.vim',
	\ 'lsp.vim',
	\ 'which-key.vim',
	\ 'autocomplete.vim',
	\]

for files in config_list
	exec 'source' g:vim_home.'/'.files
endfor


" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

"let g:solarized_termtrans=1
"let g:solarized_termcolors=256
let g:dracula_colorterm = 0
set background=dark 
colorscheme dracula

if has("vms")
  set nobackup          " do not keep a backup file, use versions instead
else
  set backup            " keep a backup file (restore to previous version)
  if has('persistent_undo')
    set undofile        " keep an undo file (undo changes after closing)
  endif
endif

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  augroup END

else

  set autoindent                " always set autoindenting on

endif " has("autocmd")

" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
if has('syntax') && has('eval')
  packadd matchit
endif

"Syntastic default conf
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

nmap <F8> :TagbarToggle<CR>
let g:tagbar_ctags_bin = "uctags"



